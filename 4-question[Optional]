 4. There is a function that takes a list of integers and is supposed to return the sorted version of the input list. Write test cases for the function.
a. Note : It is NOT trivial. Think very carefully.
b. Bonus points: automate the test cases by writing generic unit testing, how?
Solution:-
# TESTCASES:-
1.input-1 = 3
   Input-2 = 3
   Input-3 = 2
   Input-4 = 1
 arr =  [3,2,1]
expected output = [1,2,3]
your output = [1,2,3] 

2. input-1 = 5
   Input-2 = 1
   Input-3 = 2
   Input-4 = 3
   Input-5 = 4
   Input-6 = 5
 arr =  [1,2,3,4,5]
expected output = [1,2,3,4,5]
your output = [1,2,3,4,5]

3. input-1 = 5
   Input-2 = 5
   Input-3 = 4
   Input-4 = 3
   Input-5 = 2
   Input-6 = 1
arr = [5,4,3,2,1]
expected output = [1,2,3,4,5]
your output = [1,2,3,4,5]

4.input-1 = 6
   Input-2 = 1
   Input-3 = 2
   Input-4 = 3
   Input-5 = 2
   Input-6 = 1
  Input-7 = 4
arr = [1,2,3,2,1,4]
expected output = [1,1,2,2,3,4]
your output = [1,1,2,2,3,4]

5. input-1 = 1000
   Input-2 = 100
   Input-3 = 20000
   Input-4 = 3
   Input-5 = 2
   Input-6 = 1
arr = [1000,100,20000,3,2,1]
expected output = [1,2,3,100,1000,20000]
your output = [1,2,3,100,1000,20000]

code:-

def bubbleSorted(data):
    
  for i in range(len(data)):
    for j in range(0, len(data) - i - 1):

      if data[j] > data[j + 1]:

        temp = data[j]
        data[j] = data[j+1]
        data[j+1] = temp
  return data        


arr = []
l = int(input())
for i in range(l):
    X = int(input())
    arr.append(X)

print(bubbleSorted(arr))
 
